# настройки того, как персонал будет уведомлен о нарушениях.
alerts:
  # право, необходимое игроку, чтобы видеть оповещения о нарушениях.
  permission: "shadeac.alerts"

  # формат сообщения об оповещении.
  # доступные плейсхолдеры:
  # %player% - Имя игрока
  # %check% - Название проверки (e.g., Killaura)
  # %type% - Тип проверки (e.g., A, B, HML)
  # %vl% - Уровень нарушений (Violations Level)
  # %debug% - Дополнительная отладочная информация от проверки
  message: "&8[&3ShadeAc&8] &7» &b%player% &fflagged for &3%check% &7(&b%type%&7) &fVL: &b%vl% &8[&7%debug%&8]"


# тутя вы можете включать/выключать чеки и настраивать их чувствительность
checks:
  combat:
    # Killaura
    killaura:
      # Проверка A: Анализ снапов (резких и точных доводок)
      # хорошо ловит простые аим-ассисты и ауры ноу ноу ес ес (может фолсить, но не много)
      A:
        enabled: true
        # минимальный угол до цели, чтобы считать движение коррекцией
        min-correction-angle: 2.0
        # максимальный угол промаха после движения, чтобы считать его точным снапом
        max-final-angle: 0.5
        # минимальное ускорение ротации, чтобы считать движение резким
        min-acceleration: 10.0
        # минимальное соотношение скоростей для детекта неестественного старта/остановки
        min-smoothness-ratio: 40.0
        mitigation:
          enabled: true
          # митигейшен отмены инфа в package ru.Fronzter.ShadeAc.mitigation (TYPE)
          mode: "CANCEL_DAMAGE"

      # проверка B: Анализ консистентности и рывка (jerk)
      # эффективна против более плавных аимов - аур но не работает на все 100... потом доделаю
      B:
        enabled: true
        # макс. разница между двумя приращениями yaw, чтобы считать их одинаковыми
        consistency-tolerance: 0.5
        # мин. приращение yaw для срабатывания проверки
        consistency-min-delta: 8.0
        # порог рывка (резкости изменения ускорения)
        jerk-threshold: 50.0
        # пороги для детекта паттерна флик (медленно -> быстро -> атака)
        flick-low-threshold: 5.0
        flick-high-threshold: 30.0
        mitigation:
          enabled: true
          # митигейшен уменьшения урона
          mode: "REDUCE_DAMAGE"
          reduce-amount: 0.5 # уменьшить на 50%

      # проверка HML: Детектор на основе самописной нейросети
      # самая продвинутая проверка, требует обучения на ваших данных
      HML:
        enabled: true
        # порог уверенности нейросети для флага (от 0.0 до 1.0).
        # рекомендуется начинать с 0.95 и понижать, если есть ложные срабатывания
        debug-mode: true
        threshold: 0.95
        # митигация для ML-чека обычно не используется, так как он анализирует
        # паттерны, а не единичные атаки. Наказание по VL - лучший вариант
        mitigation:
          enabled: false
          mode: "NONE"

    autoclicker:
      # проверка A: Статистический анализ задержек между кликами
      A:
        enabled: true
        # макс. стандартное отклонение в задержках между кликами (в мс)
        max-std-dev: 12.0
        # мин. куртозис (острота пика распределения)
        min-kurtosis: 2.5
        # мин. CPS для срабатывания проверки
        min-cps: 8.0
        mitigation:
          enabled: false
          mode: "NONE"