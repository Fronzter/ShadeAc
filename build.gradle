plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'ru.Fronzter'
version = '1.0'

repositories {
    mavenCentral()
    maven { url = "https://jitpack.io" }
    maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
    maven { name = "spigotmc-repo"; url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    flatDir { dirs 'libs' }
}

dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly name: 'ProtocolLib'
    compileOnly name: 'spigot-1.16.5'
    compileOnly name: 'packetevents-spigot-2.9.4'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') { expand props }
}

tasks.named('shadowJar') {
    archiveClassifier.set('')
    minimize()

    relocate 'org.apache.commons.math3', 'ru.Fronzter.events.commons.math3'
    relocate 'com.github.retrooper.packetevents', 'ru.Fronzter.events.packetevents'

    from('LICENSE') { into('/') }
    from('NOTICE') { into('/') }
}

build.dependsOn shadowJar
